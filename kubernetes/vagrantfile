Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/mantic64"
    config.vm.network "private_network", ip: "172.16.1.10"
    config.vm.network "forwarded_port", guest: 80, host: 8081 #localhost
    config.vm.network "forwarded_port", guest: 22, host: 2222 #ssh
    config.vm.hostname = "c1-controlplane01"
    config.vm.synced_folder ".", "/syncd", disabled: false
    config.vm.disk :disk, size: "100GB", primary: true
    config.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = "2"
      vb.name = "c1-controlplane01"
    end
  
    config.vm.provision "shell", inline: <<-SHELL
 
    wget -O packege_installation.sh https://raw.githubusercontent.com/edwinbermudez/295devops-group5/feature/exercise1-init/kubernetes/packege_installation.sh
    sudo chmod +x packege_installation.sh
    sudo ./packege_installation.sh
    
    wget https://docs.projectcalico.org/manifests/calico.yaml
    sudo kubeadm init > kubeadm_join_command.sh
    DIR=/home/vagrant
    #Configure our account on the Control Plane Node to have admin access to the API server from a non-privileged account.
  
    mkdir -p $DIR/.kube
    sudo cp -i /etc/kubernetes/admin.conf $DIR/.kube/config
    sudo chown vagrant:vagrant $DIR/.kube/config
    
    #1 - Creating a Pod Network
    #Deploy yaml file for your pod network.
    kubectl apply -f calico.yaml
    
    #Look for the all the system pods and calico pods to change to Running. 
    #The DNS pod won't start (pending) until the Pod network is deployed and Running.
    kubectl get pods --all-namespaces
    SHELL
  end