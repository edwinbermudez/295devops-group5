Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/jammy64"
  config.vm.network "private_network", ip: "172.16.1.2"
  config.vm.network "forwarded_port", guest: 80, host: 8081 #localhost
  config.vm.network "forwarded_port", guest: 22, host: 2222 #ssh
  config.vm.network "forwarded_port", guest: 8080, host: 1234 #alternative port
  config.vm.network "forwarded_port", guest: 8000, host: 1256 #alternative port
  config.vm.network "forwarded_port", guest: 3306, host: 1260 #mysql
  config.vm.hostname = "bootcamp295"
  config.vm.synced_folder ".", "/syncd", disabled: false
  config.vm.disk :disk, size: "80GB", primary: true
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
    vb.cpus = "2"
    vb.name = "295devops_group5"
  end
  

  config.vm.provision "shell", inline: <<-SHELL
 
  #Paquetes para el servidor LAMP
  paquetes=(
    curl  
    git
    php
    apache2
    libapache2-mod-php
    php-mysql
    php-mbstring
    php-zip
    php-gd
    php-json
    php-curl
    mariadb-server
    tree
  )
  
  #Definici贸n de colores
  LRED='\033[1;31m'
  LGREEN='\033[1;32m'
  LYELLOW='\033[1;33m'
  NC='\033[0m'
  

  InstalarPaquetes() {
    local paquetes=("$@")
    for paquete in "${paquetes[@]}"; do
      dpkg -s "$paquete" &> /dev/null
      if [ $? -eq 0 ]; then
        sleep 1
        echo -e "\n${LGREEN}$paquete is already installed${NC}"
      else
        apt install "$paquete" -y 
        if [ $? -ne 0 ]; then
          echo -e "\n${LRED} Error installing $paquete${NC}"
          exit 1
        fi
        if [ "$paquete" = "apache2" ]; then
          echo -e "${LGREEN}Se inicia servicio de Apache2${NC}"
          sudo systemctl start apache2
          sudo systemctl enable apache2
        fi
        if [ "$paquete" = "mariadb-server" ]; then
          echo -e "${LGREEN}Se inicia servicio de Mariadb${NC}"
          sudo systemctl start mariadb
          sudo systemctl enable mariadb
        fi  
      fi
    done
  }
  
  ValidacionServicios() {
    local paquetes=("$@")
    for paquete in "${paquetes[@]}"; do
      case $paquete in
        git)
          echo -e "${LYELLOW} -------- Revisando la version de GIT -------- ${NC}"
          git --version;;
        php)
          echo -e "${LYELLOW} -------- Revisando la version de PHP -------- ${NC}"
          php -v;;
        mariadb-server)
          echo -e "${LYELLOW} -------- Verificando el estado del servicio MARIADB -------- ${NC}"
          mysql --version
          if systemctl is-active --quiet mariadb; then
            echo -e "${LGREEN}MariaDB is running.${NC}"
          else
            echo -e "${LRED}MariaDB is not running. ${NC}"
          fi
          ;;
        apache2)
          echo -e "${LYELLOW} -------- Verificando el estado del servicio de APACHE -------- ${NC}"
          apache2 -v
          if systemctl is-active --quiet apache2; then
            echo -e "${LGREEN}Apache is running.${NC}"
          else
            echo -e "${LRED}Apache is not running. ${NC}"
          fi
          ;;
      esac
    done
  }

#Function Stage1 Instalaci贸n de paquetes nuevos y validaci贸n de los servicios y paquetes instalados  
  Stage1() {

    echo -e "${LGREEN} -------------------- Actualizando paquetes existentes ----------------${NC}"
    sudo apt-get update -y

    echo -e "${LYELLOW} -------------------- Instalando nuevos paquetes ----------------${NC}"
    InstalarPaquetes "${paquetes[@]}"
    
    echo -e "${LGREEN} -------------------- Validacion de los servicios --------------------${NC}"
    ValidacionServicios "${paquetes[@]}"
  }


################################## STAGES ###########################################################  
#Instalaci贸n
Stage1

#Build
#Stage2
  
#Deploy
#Stage3
  
#Notification
#Stage4
  
  SHELL
end